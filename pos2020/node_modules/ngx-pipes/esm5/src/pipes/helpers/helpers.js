import * as tslib_1 from "tslib";
export function isUndefined(value) {
    return typeof value === 'undefined';
}
export function isNull(value) {
    return value === null;
}
export function isFunction(value) {
    return typeof value === 'function';
}
export function isNumber(value) {
    return typeof value === 'number';
}
export function isString(value) {
    return typeof value === 'string';
}
export function isBoolean(value) {
    return typeof value === 'boolean';
}
export function isObject(value) {
    return value !== null && typeof value === 'object';
}
export function isNumberFinite(value) {
    return isNumber(value) && isFinite(value);
}
export function isVowel(letter) {
    var vowels = ['a', 'e', 'i', 'o', 'u'];
    return vowels.indexOf(letter) !== -1;
}
export function ucFirst(text) {
    var _a = tslib_1.__read(text.split(/\s/g)), part = _a[0], split = _a.slice(1);
    var ucd = part
        .toLowerCase()
        .split(/(?=['|-])/g)
        .map(function (word) {
        return word.indexOf('-') + word.indexOf("'") > -2
            ? word.slice(0, 2).toUpperCase() + word.slice(2)
            : word.slice(0, 1).toUpperCase() + word.slice(1);
    })
        .join('');
    return tslib_1.__spread([ucd], split).join(' ');
}
export function applyPrecision(num, precision) {
    if (precision <= 0) {
        return Math.round(num);
    }
    var tho = Math.pow(10, precision);
    return Math.round(num * tho) / tho;
}
export function extractDeepPropertyByMapKey(obj, map) {
    var keys = map.split('.');
    var head = keys.shift();
    return keys.reduce(function (prop, key) {
        return !isUndefined(prop) && !isNull(prop) && !isUndefined(prop[key]) ? prop[key] : undefined;
    }, obj[head || '']);
}
export function extractDeepPropertyByParentMapKey(obj, map) {
    var keys = map.split('.');
    var tail = keys.pop();
    var props = extractDeepPropertyByMapKey(obj, keys.join('.'));
    return { props: props, tail: tail };
}
export function getKeysTwoObjects(obj, other) {
    return tslib_1.__spread(Object.keys(obj), Object.keys(other)).filter(function (key, index, array) { return array.indexOf(key) === index; });
}
export function isDeepEqual(obj, other) {
    if (!isObject(obj) || !isObject(other)) {
        return obj === other;
    }
    return getKeysTwoObjects(obj, other).every(function (key) {
        if (!isObject(obj[key]) && !isObject(other[key])) {
            return obj[key] === other[key];
        }
        if (!isObject(obj[key]) || !isObject(other[key])) {
            return false;
        }
        return isDeepEqual(obj[key], other[key]);
    });
}
//# sourceMappingURL=data:application/json;base64,